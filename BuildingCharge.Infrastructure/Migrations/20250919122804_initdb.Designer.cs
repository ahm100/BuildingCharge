// <auto-generated />
using System;
using BuildingCharge.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuildingCharge.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250919122804_initdb")]
    partial class initdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BuildingCharge.Core.Domain.Entities.Charge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ManualAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Period")
                        .HasColumnType("datetime2");

                    b.Property<int>("SourceType")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Charges");
                });

            modelBuilder.Entity("BuildingCharge.Core.Domain.Entities.ChargeItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ChargeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChargeId");

                    b.ToTable("ChargeItems");
                });

            modelBuilder.Entity("BuildingCharge.Core.Domain.Entities.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TotalCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDebt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("BuildingCharge.Core.Domain.Entities.UnitChargeShare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CalculatedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ChargeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Coefficient")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FinalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChargeId");

                    b.HasIndex("UnitId");

                    b.ToTable("UnitChargeShares");
                });

            modelBuilder.Entity("BuildingCharge.Core.Domain.Entities.ChargeItem", b =>
                {
                    b.HasOne("BuildingCharge.Core.Domain.Entities.Charge", "Charge")
                        .WithMany("Items")
                        .HasForeignKey("ChargeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Charge");
                });

            modelBuilder.Entity("BuildingCharge.Core.Domain.Entities.UnitChargeShare", b =>
                {
                    b.HasOne("BuildingCharge.Core.Domain.Entities.Charge", "Charge")
                        .WithMany("Shares")
                        .HasForeignKey("ChargeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingCharge.Core.Domain.Entities.Unit", "Unit")
                        .WithMany("Shares")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Charge");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("BuildingCharge.Core.Domain.Entities.Charge", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Shares");
                });

            modelBuilder.Entity("BuildingCharge.Core.Domain.Entities.Unit", b =>
                {
                    b.Navigation("Shares");
                });
#pragma warning restore 612, 618
        }
    }
}
